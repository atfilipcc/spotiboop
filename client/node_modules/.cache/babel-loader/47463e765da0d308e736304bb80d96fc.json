{"ast":null,"code":"var _jsxFileName = \"/Users/filip.cordas/Documents/Projects/web-api-auth-examples/client/src/components/Sorter.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useContext } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { ContextUser } from './UserContext';\nconst spotifyWebApi = new Spotify();\n\nconst Sorter = () => {\n  const {\n    user,\n    setUser\n  } = useContext(ContextUser);\n  const [error, setError] = useState('');\n  const [playlists, setPlaylists] = useState('');\n  const [tracks, setTracks] = useState('');\n\n  if (user.access_token) {\n    spotifyWebApi.setAccessToken(user.access_token);\n  }\n\n  const getAllSongsAndSort = async () => {\n    const res = await spotifyWebApi.getUserPlaylists(user.id, {\n      limit: 30\n    });\n    const array = await res.items.map(item => item.id);\n    console.log(array);\n  }; // .then(array => array.forEach(item => spotifyWebApi.getPlaylistTracks(item)\n  // .then(array => setPlaylists(array)\n  // .catch(err => console.log(err))\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Sorter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, error, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getAllSongsAndSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, \"Get Playlists\"));\n};\n\nexport default Sorter;","map":{"version":3,"sources":["/Users/filip.cordas/Documents/Projects/web-api-auth-examples/client/src/components/Sorter.js"],"names":["React","useState","useContext","Spotify","ContextUser","spotifyWebApi","Sorter","user","setUser","error","setError","playlists","setPlaylists","tracks","setTracks","access_token","setAccessToken","getAllSongsAndSort","res","getUserPlaylists","id","limit","array","items","map","item","console","log"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,MAAMC,aAAa,GAAG,IAAIF,OAAJ,EAAtB;;AAEA,MAAOG,MAAM,GAAG,MAAM;AACpB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBN,UAAU,CAACE,WAAD,CAAlC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;;AAEA,MAAIM,IAAI,CAACQ,YAAT,EAAuB;AACrBV,IAAAA,aAAa,CAACW,cAAd,CAA6BT,IAAI,CAACQ,YAAlC;AACD;;AAED,QAAME,kBAAkB,GAAG,YAAY;AACrC,UAAMC,GAAG,GAAG,MAAMb,aAAa,CAACc,gBAAd,CAA+BZ,IAAI,CAACa,EAApC,EAAwC;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAxC,CAAlB;AACA,UAAMC,KAAK,GAAG,MAAMJ,GAAG,CAACK,KAAJ,CAAUC,GAAV,CAAcC,IAAI,IAAIA,IAAI,CAACL,EAA3B,CAApB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAEG,GALL,CAVoB,CAkBhB;AACA;AACA;;;AACJ,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCb,KADD,eAEA;AAAQ,IAAA,OAAO,EAAEQ,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFA,CADF;AAMD,CA3BD;;AA6BA,eAAeX,MAAf","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, {useState, useContext} from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { ContextUser } from './UserContext';\n\nconst spotifyWebApi = new Spotify();\n\nconst  Sorter = () => {\n  const {user, setUser} = useContext(ContextUser);\n  const [error, setError] = useState('');\n  const [playlists, setPlaylists] = useState('');\n  const [tracks, setTracks] = useState('');\n\n  if (user.access_token) {\n    spotifyWebApi.setAccessToken(user.access_token)\n  }\n\n  const getAllSongsAndSort = async () => {\n    const res = await spotifyWebApi.getUserPlaylists(user.id, {limit: 30})\n    const array = await res.items.map(item => item.id)\n    console.log(array);\n\n      }\n\n\n      // .then(array => array.forEach(item => spotifyWebApi.getPlaylistTracks(item)\n      // .then(array => setPlaylists(array)\n      // .catch(err => console.log(err))\n  return (\n    <div className=\"Sorter\">\n    {error}\n    <button onClick={getAllSongsAndSort}>Get Playlists</button>\n    </div>\n  );\n}\n\nexport default Sorter;\n"]},"metadata":{},"sourceType":"module"}