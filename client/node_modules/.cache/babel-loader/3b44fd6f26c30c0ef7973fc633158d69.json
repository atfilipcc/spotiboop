{"ast":null,"code":"var _jsxFileName = \"/Users/filip.cordas/Documents/Projects/web-api-auth-examples/client/src/components/TopList.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useContext, useEffect } from 'react';\nimport Layout from './Layout';\nimport Spotify from 'spotify-web-api-js';\nimport { ContextUser } from '../components/UserContext';\nconst spotifyWebApi = new Spotify();\n\nconst TopList = () => {\n  const {\n    user,\n    setUser\n  } = useContext(ContextUser);\n  const [topTracks, setTopTracks] = useState([]);\n  const [isPlaying, setPlaying] = useState([]);\n\n  function getTopList() {\n    spotifyWebApi.setAccessToken(user.token);\n    spotifyWebApi.getMyTopTracks(user.token).then(res => setTopTracks(Object.values(res)[0]));\n  }\n\n  function playSong(e) {\n    const audio = e.target.nextSibling.nextSibling;\n    setPlaying(audio);\n\n    if (audio.paused) {\n      audio.play();\n    } else {\n      audio.pause();\n    }\n  }\n\n  console.log(topTracks);\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TopList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"TopList__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, \"Your Top Tracks\"), !topTracks.length && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getTopList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 27\n    }\n  }, \"Get Top Tracks\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"TopList__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, topTracks && topTracks.map((item, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"article\", {\n    key: item.name,\n    className: \"TopList__song--wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TopList__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: item.name,\n    className: \"TopList__song\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, `${index + 1} - ${item.artists[0].name} - ${item.name}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TopList__playpause--wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `playpause ${item.name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onClick: e => playSong(e),\n    type: \"checkbox\",\n    defaultChecked: true,\n    value: \"None\",\n    id: `playpause ${item.name}`,\n    name: \"check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: `playpause ${item.name}`,\n    tabIndex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"audio\", {\n    className: `audio_${item.name}`,\n    key: `playback ${item.name}`,\n    src: item.preview_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"TopList__image\",\n    src: item.album.images[1].url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })))))));\n};\n\nexport default TopList;","map":{"version":3,"sources":["/Users/filip.cordas/Documents/Projects/web-api-auth-examples/client/src/components/TopList.js"],"names":["React","useState","useContext","useEffect","Layout","Spotify","ContextUser","spotifyWebApi","TopList","user","setUser","topTracks","setTopTracks","isPlaying","setPlaying","getTopList","setAccessToken","token","getMyTopTracks","then","res","Object","values","playSong","e","audio","target","nextSibling","paused","play","pause","console","log","length","map","item","index","name","artists","preview_url","album","images","url"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, {useState, useContext, useEffect} from 'react';\nimport Layout from './Layout';\nimport Spotify from 'spotify-web-api-js';\nimport { ContextUser } from '../components/UserContext';\n\nconst spotifyWebApi = new Spotify();\n\nconst  TopList = () => {\n  const {user, setUser} = useContext(ContextUser);\n  const [topTracks, setTopTracks] = useState([]);\n  const [isPlaying, setPlaying] = useState([]);\n\n  function getTopList() {\n    spotifyWebApi.setAccessToken(user.token)\n    spotifyWebApi.getMyTopTracks(user.token)\n      .then(res => setTopTracks(Object.values(res)[0]))\n    }\n\n  function playSong(e) {\n    const audio = e.target.nextSibling.nextSibling;\n    setPlaying(audio)\n    if (audio.paused) {\n      audio.play()\n    } else {\n      audio.pause();\n    }\n  }\n\n\n  console.log(topTracks);\n  return (\n    <Layout>\n    <div className=\"TopList\">\n    <h1 className=\"TopList__title\">Your Top Tracks</h1>\n    {!topTracks.length && <button onClick={getTopList}>Get Top Tracks</button>}\n    <ul className=\"TopList__list\">\n      {topTracks && topTracks.map((item, index) => (\n      <>\n      <article key={item.name} className=\"TopList__song--wrapper\">\n      <div className=\"TopList__content\">\n        <li key={item.name} className=\"TopList__song\">{`${index + 1} - ${item.artists[0].name} - ${item.name}`}</li>\n        </div>\n        <div className=\"TopList__playpause--wrapper\">\n          <div className={`playpause ${item.name}`}>\n            <input onClick={e => playSong(e)} type=\"checkbox\" defaultChecked={true} value=\"None\" id={`playpause ${item.name}`} name=\"check\" />\n            <label htmlFor={`playpause ${item.name}`} tabIndex=\"1\"></label>\n            <audio className={`audio_${item.name}`} key={`playback ${item.name}`} src={item.preview_url} />\n          </div>\n        </div>\n        <img className=\"TopList__image\" src={item.album.images[1].url}></img>\n      </article>\n      </>)\n      )}\n      {/* onClick={e => playSong(e)} */}\n    </ul>\n    </div>\n    </Layout>\n  );\n}\n\nexport default TopList;\n"]},"metadata":{},"sourceType":"module"}