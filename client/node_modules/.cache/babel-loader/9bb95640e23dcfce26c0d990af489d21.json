{"ast":null,"code":"var _jsxFileName = \"/Users/filip.cordas/Documents/Projects/web-api-auth-examples/client/src/components/Current.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useContext } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { ContextUser } from '../components/UserContext';\nconst spotifyWebApi = new Spotify();\n\nconst Current = () => {\n  const [user, setUser] = useContext(ContextUser);\n  const [nowPlaying, setNowPlaying] = useState({\n    name: 'none',\n    image: ''\n  });\n\n  if (user.token) {\n    spotifyWebApi.setAccessToken(user.token);\n  }\n\n  function getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState(user.token).then(res => setNowPlaying({\n      name: res.item.name,\n      image: res.item.album.images[0].url\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"Now Playing: \", nowPlaying.name), /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"album-art\",\n    src: nowPlaying.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:8888\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Log In\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getNowPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Check PLaying\"));\n};\n\nexport default Current;","map":{"version":3,"sources":["/Users/filip.cordas/Documents/Projects/web-api-auth-examples/client/src/components/Current.js"],"names":["React","useState","useContext","Spotify","ContextUser","spotifyWebApi","Current","user","setUser","nowPlaying","setNowPlaying","name","image","token","setAccessToken","getNowPlaying","getMyCurrentPlaybackState","then","res","item","album","images","url"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAEA,MAAMC,aAAa,GAAG,IAAIF,OAAJ,EAAtB;;AAEA,MAAOG,OAAO,GAAG,MAAM;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,UAAU,CAACE,WAAD,CAAlC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC;AAACU,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,KAAK,EAAE;AAAtB,GAAD,CAA5C;;AAEA,MAAIL,IAAI,CAACM,KAAT,EAAgB;AACdR,IAAAA,aAAa,CAACS,cAAd,CAA6BP,IAAI,CAACM,KAAlC;AACD;;AAED,WAASE,aAAT,GAAyB;AACvBV,IAAAA,aAAa,CAACW,yBAAd,CAAwCT,IAAI,CAACM,KAA7C,EACGI,IADH,CACQC,GAAG,IAAIR,aAAa,CAAC;AAACC,MAAAA,IAAI,EAAEO,GAAG,CAACC,IAAJ,CAASR,IAAhB;AAAsBC,MAAAA,KAAK,EAAEM,GAAG,CAACC,IAAJ,CAASC,KAAT,CAAeC,MAAf,CAAsB,CAAtB,EAAyBC;AAAtD,KAAD,CAD5B;AAED;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmBb,UAAU,CAACE,IAA9B,CADA,eAEA;AAAK,IAAA,GAAG,EAAC,WAAT;AAAqB,IAAA,GAAG,EAAEF,UAAU,CAACG,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAGA;AAAG,IAAA,IAAI,EAAC,uBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAHA,eAME;AAAQ,IAAA,OAAO,EAAEG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,CADF;AAUD,CAtBD;;AAwBA,eAAeT,OAAf","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, {useState, useContext} from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { ContextUser } from '../components/UserContext';\n\nconst spotifyWebApi = new Spotify();\n\nconst  Current = () => {\n  const [user, setUser] = useContext(ContextUser)\n  const [nowPlaying, setNowPlaying] = useState({name: 'none', image: ''})\n\n  if (user.token) {\n    spotifyWebApi.setAccessToken(user.token)\n  }\n\n  function getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState(user.token)\n      .then(res => setNowPlaying({name: res.item.name, image: res.item.album.images[0].url}))\n  }\n  return (\n    <div className=\"App\">\n    <div>Now Playing: {nowPlaying.name}</div>\n    <img alt=\"album-art\" src={nowPlaying.image}></img>\n    <a href=\"http://localhost:8888\">\n      <button>Log In</button>\n      </a>\n      <button onClick={getNowPlaying}>Check PLaying</button>\n    </div>\n  );\n}\n\nexport default Current;\n"]},"metadata":{},"sourceType":"module"}