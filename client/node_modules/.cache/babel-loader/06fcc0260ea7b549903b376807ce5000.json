{"ast":null,"code":"var _jsxFileName = \"/Users/filip.cordas/Documents/Projects/web-api-auth-examples/client/src/router/router.js\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from '../components/App';\nimport About from '../components/About';\nimport Auth from '../components/Auth';\nimport Current from '../components/Current';\nimport { ContextUser } from '../components/UserContext';\nimport qs from 'query-string';\nimport Spotify from 'spotify-web-api-js';\nconst spotifyWebApi = new Spotify();\n\nconst AppRouter = () => {\n  const [user, setUser] = useState(null);\n  const value = useMemo(() => (({\n    user,\n    setUser\n  }), [user, setUser]));\n  useEffect(() => {\n    const token = qs.parse(window.location.search);\n\n    if (token.access_token) {\n      setUser({\n        token: token.access_token\n      });\n      spotifyWebApi.setAccessToken(user.token);\n\n      if (user.token) {\n        const user = spotifyWebApi.getUser(user.token).then(res => console.log(res));\n      }\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(ContextUser.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: App,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/callback\",\n    exact: true,\n    component: Auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/about\",\n    component: About,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/current\",\n    component: Current,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/auth\",\n    component: Auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  })))));\n};\n\nexport default AppRouter;","map":{"version":3,"sources":["/Users/filip.cordas/Documents/Projects/web-api-auth-examples/client/src/router/router.js"],"names":["React","useState","useMemo","useEffect","BrowserRouter","Router","Route","Switch","App","About","Auth","Current","ContextUser","qs","Spotify","spotifyWebApi","AppRouter","user","setUser","value","token","parse","window","location","search","access_token","setAccessToken","getUser","then","res","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,EAAmCC,SAAnC,QAAoD,OAApD;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,EAAP,MAAe,cAAf;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,aAAa,GAAG,IAAID,OAAJ,EAAtB;;AAEA,MAAME,SAAS,GAAG,MAAM;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,IAAD,CAAhC;AACC,QAAMkB,KAAK,GAAGjB,OAAO,CAAC,OAAO;AAAEe,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmB,CAACD,IAAD,EAAOC,OAAP,CAA1B,CAAD,CAArB;AACAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,KAAK,GAAGP,EAAE,CAACQ,KAAH,CAASC,MAAM,CAACC,QAAP,CAAgBC,MAAzB,CAAd;;AACA,QAAIJ,KAAK,CAACK,YAAV,EAAwB;AACtBP,MAAAA,OAAO,CAAC;AAACE,QAAAA,KAAK,EAAEA,KAAK,CAACK;AAAd,OAAD,CAAP;AACAV,MAAAA,aAAa,CAACW,cAAd,CAA6BT,IAAI,CAACG,KAAlC;;AACA,UAAIH,IAAI,CAACG,KAAT,EAAgB;AACd,cAAMH,IAAI,GAAGF,aAAa,CAACY,OAAd,CAAsBV,IAAI,CAACG,KAA3B,EACZQ,IADY,CACPC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CADA,CAAb;AAED;AACF;AACF,GAVQ,EAUN,EAVM,CAAT;AAYD,sBACC,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEV,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,SAAS,EAAEX,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEO,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,KAAK,MAA7B;AAA8B,IAAA,SAAS,EAAEE,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFP,eAGC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAED,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,eAIC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAEE,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,eAKC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CADD,CADD,CADD,CADD;AAeA,CA9BD;;AAgCA,eAAeM,SAAf","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from '../components/App';\nimport About from '../components/About';\nimport Auth from '../components/Auth';\nimport Current from '../components/Current';\nimport { ContextUser } from '../components/UserContext';\nimport qs from 'query-string';\nimport Spotify from 'spotify-web-api-js';\n\nconst spotifyWebApi = new Spotify();\n\nconst AppRouter = () => {\n\tconst [user, setUser] = useState(null);\n  const value = useMemo(() => ({ user, setUser }, [user, setUser]));\n  useEffect(() => {\n    const token = qs.parse(window.location.search);\n    if (token.access_token) {\n      setUser({token: token.access_token})\n      spotifyWebApi.setAccessToken(user.token)\n      if (user.token) {\n        const user = spotifyWebApi.getUser(user.token)\n        .then(res => console.log(res));\n      }\n    }\n  }, [])\n\n\treturn (\n\t\t<ContextUser.Provider value={value}>\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path='/' exact component={App} />\n            <Route path='/callback' exact component={Auth} />\n\t\t\t\t\t\t<Route path='/about' component={About} />\n\t\t\t\t\t\t<Route path='/current' component={Current} />\n\t\t\t\t\t\t<Route path='/auth' component={Auth} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</ContextUser.Provider>\n\t);\n};\n\nexport default AppRouter;\n"]},"metadata":{},"sourceType":"module"}