{"ast":null,"code":"var _jsxFileName = \"/Users/filip.cordas/Documents/Projects/web-api-auth-examples/client/src/router/router.js\";\nimport React, { useState, useMemo, useEffect, useContext } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from '../components/App';\nimport Layout from '../components/Layout';\nimport About from '../components/About';\nimport Current from '../components/Current';\nimport TopList from '../components/TopList';\nimport { ContextUser } from '../components/UserContext';\nimport qs from 'query-string';\nimport axios from 'axios';\nconst now = new Date();\n\nconst AppRouter = () => {\n  const [user, setUser] = useState({\n    token: '',\n    name: '',\n    id: '',\n    expiry: ''\n  });\n  const value = useMemo(() => ({\n    user,\n    setUser\n  }), [user, setUser]);\n  useEffect(() => {\n    const accessToken = qs.parse(window.location.search);\n\n    if (token.access_token) {\n      axios.get('https://api.spotify.com/v1/me', {\n        headers: {\n          'Authorization': 'Bearer ' + token.access_token\n        }\n      }).then(res => {\n        setUser({\n          token: token.access_token,\n          name: res.data.display_name,\n          id: res.data.id,\n          expiry: now.getTime()\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    const token = localStorage.getItem('userToken');\n    const userToken = JSON.parse(token);\n\n    if (userToken) {\n      if (now.getTime() - userToken.expiry > 30 * 30 * 1000) {\n        logOutUser();\n      } else {\n        setUser(userToken);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    const json = JSON.stringify(user);\n    localStorage.setItem('userToken', json);\n  }, [user]);\n\n  const logOutUser = () => {\n    localStorage.removeItem('userToken');\n    setUser({\n      token: '',\n      name: '',\n      id: '',\n      expiry: ''\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContextUser.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(App, {\n    logOutUser: logOutUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/callback\",\n    exact: true,\n    component: App,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/about\",\n    component: About,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/current\",\n    component: Current,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/toplist\",\n    component: TopList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }))))));\n};\n\nexport default AppRouter;","map":{"version":3,"sources":["/Users/filip.cordas/Documents/Projects/web-api-auth-examples/client/src/router/router.js"],"names":["React","useState","useMemo","useEffect","useContext","BrowserRouter","Router","Route","Switch","App","Layout","About","Current","TopList","ContextUser","qs","axios","now","Date","AppRouter","user","setUser","token","name","id","expiry","value","accessToken","parse","window","location","search","access_token","get","headers","then","res","data","display_name","getTime","localStorage","getItem","userToken","JSON","logOutUser","json","stringify","setItem","removeItem"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect, useContext } from 'react';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport App from '../components/App';\nimport Layout from '../components/Layout';\nimport About from '../components/About';\nimport Current from '../components/Current';\nimport TopList from '../components/TopList';\nimport { ContextUser } from '../components/UserContext';\nimport qs from 'query-string';\nimport axios from 'axios';\nconst now = new Date();\n\nconst AppRouter = () => {\n  const [user, setUser] = useState({token: '', name: '', id: '', expiry: ''});\n  const value = useMemo(() => ({ user, setUser }), [user, setUser]);\n\n  useEffect(() => {\n    const accessToken = qs.parse(window.location.search);\n    if (token.access_token) {\n      axios.get('https://api.spotify.com/v1/me', {\n        headers: {'Authorization': 'Bearer ' + token.access_token}\n        }).then(res => {\n          setUser({token: token.access_token, name: res.data.display_name, id: res.data.id, expiry: now.getTime()})\n        })\n    }\n  }, [])\n\n  useEffect(() => {\n    const token = localStorage.getItem('userToken');\n    const userToken = JSON.parse(token);\n    if (userToken) {\n    if (now.getTime() - userToken.expiry > 30*30*1000) {\n      logOutUser();\n    } else {\n      setUser(userToken)\n    }\n  }\n  }, [])\n\n  useEffect(() => {\n    const json = JSON.stringify(user);\n    localStorage.setItem('userToken', json)\n  }, [user])\n\n  const logOutUser = () => {\n    localStorage.removeItem('userToken')\n    setUser({token: '', name: '', id: '', expiry: ''})\n  }\n\n\treturn (\n\t\t<ContextUser.Provider value={value}>\n\t\t\t<Router>\n      <Layout>\n\t\t\t\t<>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path='/' exact><App logOutUser={logOutUser} /></Route>\n            <Route path='/callback' exact component={App} />\n\t\t\t\t\t\t<Route path='/about' component={About} />\n\t\t\t\t\t\t<Route path='/current' component={Current} />\n            <Route path='/toplist' component={TopList} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</>\n        </Layout>\n\t\t\t</Router>\n\t\t</ContextUser.Provider>\n\t);\n};\n\nexport default AppRouter;\n"]},"metadata":{},"sourceType":"module"}