{"ast":null,"code":"var _jsxFileName = \"/Users/filip.cordas/Documents/Projects/web-api-auth-examples/client/src/components/Sorter.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useContext } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { ContextUser } from './UserContext';\nconst spotifyWebApi = new Spotify();\n\nconst Sorter = () => {\n  const {\n    user,\n    setUser\n  } = useContext(ContextUser);\n  const [error, setError] = useState('');\n  const [playlists, setPlaylists] = useState('');\n\n  if (user.access_token) {\n    spotifyWebApi.setAccessToken(user.access_token);\n  }\n\n  const getAllSongsAndSort = () => {\n    spotifyWebApi.getUserPlaylists(user.access_token, {\n      limit: 30\n    }).then(res = console.log(res)).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Sorter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, error, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getAllSongsAndSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, \"Get Playlists\"));\n};\n\nexport default Sorter;","map":{"version":3,"sources":["/Users/filip.cordas/Documents/Projects/web-api-auth-examples/client/src/components/Sorter.js"],"names":["React","useState","useContext","Spotify","ContextUser","spotifyWebApi","Sorter","user","setUser","error","setError","playlists","setPlaylists","access_token","setAccessToken","getAllSongsAndSort","getUserPlaylists","limit","then","res","console","log","catch","err"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,MAAMC,aAAa,GAAG,IAAIF,OAAJ,EAAtB;;AAEA,MAAOG,MAAM,GAAG,MAAM;AACpB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBN,UAAU,CAACE,WAAD,CAAlC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;;AAEA,MAAIM,IAAI,CAACM,YAAT,EAAuB;AACrBR,IAAAA,aAAa,CAACS,cAAd,CAA6BP,IAAI,CAACM,YAAlC;AACD;;AAED,QAAME,kBAAkB,GAAG,MAAM;AAC/BV,IAAAA,aAAa,CAACW,gBAAd,CAA+BT,IAAI,CAACM,YAApC,EAAkD;AAACI,MAAAA,KAAK,EAAE;AAAR,KAAlD,EACGC,IADH,CACQC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CADd,EAEGG,KAFH,CAESC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAFhB;AAGD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCd,KADD,eAEA;AAAQ,IAAA,OAAO,EAAEM,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFA,CADF;AAMD,CArBD;;AAuBA,eAAeT,MAAf","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, {useState, useContext} from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { ContextUser } from './UserContext';\n\nconst spotifyWebApi = new Spotify();\n\nconst  Sorter = () => {\n  const {user, setUser} = useContext(ContextUser);\n  const [error, setError] = useState('');\n  const [playlists, setPlaylists] = useState('');\n\n  if (user.access_token) {\n    spotifyWebApi.setAccessToken(user.access_token)\n  }\n\n  const getAllSongsAndSort = () => {\n    spotifyWebApi.getUserPlaylists(user.access_token, {limit: 30})\n      .then(res = console.log(res))\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <div className=\"Sorter\">\n    {error}\n    <button onClick={getAllSongsAndSort}>Get Playlists</button>\n    </div>\n  );\n}\n\nexport default Sorter;\n"]},"metadata":{},"sourceType":"module"}