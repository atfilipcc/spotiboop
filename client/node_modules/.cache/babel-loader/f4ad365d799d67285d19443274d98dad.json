{"ast":null,"code":"var _jsxFileName = \"/Users/filip.cordas/Documents/Projects/web-api-auth-examples/client/src/components/TopList.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useContext, useEffect } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { ContextUser } from '../components/UserContext';\nconst spotifyWebApi = new Spotify();\n\nconst TopList = () => {\n  const {\n    user,\n    setUser\n  } = useContext(ContextUser);\n  const [topTracks, setTopTracks] = useState([]);\n  const [isPlaying, setPlaying] = useState([]);\n  const [error, setError] = useState([]);\n\n  function getTopList(period) {\n    spotifyWebApi.setAccessToken(user.token);\n    spotifyWebApi.getMyTopTracks({\n      time_range: period\n    }).then(res => {\n      console.log(res);\n      setTopTracks(Object.values(res)[0]);\n    });\n  }\n\n  function playSong(e) {\n    const audio = e.target.nextSibling.nextSibling;\n    audio.volume = 0.1;\n\n    if (audio.paused) {\n      audio.play();\n      setPlaying(audio);\n    } else {\n      audio.pause();\n      setPlaying([]);\n    }\n  }\n\n  function addToPlayList() {\n    const tracks = topTracks.map(track => track.uri);\n    spotifyWebApi.createPlaylist(user.id, {\n      name: 'Your Top Tracks',\n      public: true,\n      collaborative: false,\n      description: 'Your most listened to songs.'\n    }, (err, res) => {\n      if (err) return setError(err);\n      if (res.id) spotifyWebApi.addTracksToPlaylist(res.id, tracks);\n    });\n  }\n\n  const disableButton = e => {\n    const buttons = document.getElementsByClassName('.TopList__buttons--button');\n    console.log(buttons); // buttons.forEach(button => button.disabled = false);\n\n    e.target.disabled = true;\n  };\n\n  const renderDynamicButtons = period => user.token && /*#__PURE__*/React.createElement(\"button\", {\n    id: period,\n    className: \"TopList__buttons--button\",\n    onClick: e => {\n      getTopList(period);\n      disableButton(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 58\n    }\n  }, period.replace('_', ' ').toUpperCase());\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TopList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"TopList__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, \"Your Top Tracks\"), !user.token && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Please log in to use this functionality.\"), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"TopList__buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, renderDynamicButtons('long_term'), renderDynamicButtons('medium_term'), renderDynamicButtons('short_term')), topTracks.length > 0 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addToPlayList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 30\n    }\n  }, \"Create playlist\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"TopList__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, topTracks && topTracks.map((item, index) => /*#__PURE__*/React.createElement(\"article\", {\n    key: item.name,\n    className: \"TopList__song--wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TopList__playpause--wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `playpause ${item.name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onClick: e => playSong(e),\n    type: \"checkbox\",\n    defaultChecked: true,\n    value: \"None\",\n    id: `playpause ${item.name}`,\n    name: \"check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: `playpause ${item.name}`,\n    tabIndex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"audio\", {\n    loop: true,\n    volume: \"0.1\",\n    className: `audio_${item.name}`,\n    key: `playback ${item.name}`,\n    src: item.preview_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TopList__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: item.name,\n    className: \"TopList__song\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, `${index + 1} - ${item.artists[0].name} - ${item.name}`)), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"TopList__image\",\n    src: item.album.images[1].url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })))));\n};\n\nexport default TopList;","map":{"version":3,"sources":["/Users/filip.cordas/Documents/Projects/web-api-auth-examples/client/src/components/TopList.js"],"names":["React","useState","useContext","useEffect","Spotify","ContextUser","spotifyWebApi","TopList","user","setUser","topTracks","setTopTracks","isPlaying","setPlaying","error","setError","getTopList","period","setAccessToken","token","getMyTopTracks","time_range","then","res","console","log","Object","values","playSong","e","audio","target","nextSibling","volume","paused","play","pause","addToPlayList","tracks","map","track","uri","createPlaylist","id","name","public","collaborative","description","err","addTracksToPlaylist","disableButton","buttons","document","getElementsByClassName","disabled","renderDynamicButtons","replace","toUpperCase","length","item","index","preview_url","artists","album","images","url"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, {useState, useContext, useEffect} from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { ContextUser } from '../components/UserContext';\n\nconst spotifyWebApi = new Spotify();\n\nconst  TopList = () => {\n  const {user, setUser} = useContext(ContextUser);\n  const [topTracks, setTopTracks] = useState([]);\n  const [isPlaying, setPlaying] = useState([]);\n  const [error, setError] = useState([]);\n\n  function getTopList(period) {\n    spotifyWebApi.setAccessToken(user.token)\n    spotifyWebApi.getMyTopTracks({time_range: period})\n      .then(res => {\n        console.log(res);\n        setTopTracks(Object.values(res)[0])\n      })\n    }\n\n  function playSong(e) {\n    const audio = e.target.nextSibling.nextSibling;\n    audio.volume = 0.1;\n    if (audio.paused) {\n      audio.play()\n      setPlaying(audio)\n    } else {\n      audio.pause();\n      setPlaying([]);\n    }\n  }\n\n  function addToPlayList() {\n    const tracks = topTracks.map(track => track.uri)\n    spotifyWebApi.createPlaylist(user.id, {\n      name: 'Your Top Tracks',\n      public: true,\n      collaborative: false,\n      description: 'Your most listened to songs.'\n    }, (err, res) => {\n      if (err) return setError(err);\n      if (res.id) spotifyWebApi.addTracksToPlaylist(res.id, tracks)\n    })\n  }\n\n  const disableButton = (e) => {\n    const buttons = document.getElementsByClassName('.TopList__buttons--button')\n    console.log(buttons);\n    // buttons.forEach(button => button.disabled = false);\n    e.target.disabled = true;\n  }\n\n  const renderDynamicButtons = (period) => user.token && <button id={period} className=\"TopList__buttons--button\" onClick={(e) => {\n    getTopList(period);\n    disableButton(e)\n    }}>{period.replace('_', ' ').toUpperCase()}</button>\n\n  return (\n    <div className=\"TopList\">\n    <h1 className=\"TopList__title\">Your Top Tracks</h1>\n\n    {!user.token && <p className=\"message\">Please log in to use this functionality.</p>}\n    <section className=\"TopList__buttons\">\n    {renderDynamicButtons('long_term')}\n    {renderDynamicButtons('medium_term')}\n    {renderDynamicButtons('short_term')}\n    </section>\n    {topTracks.length > 0 && <button onClick={addToPlayList}>Create playlist</button>}\n\n    <ul className=\"TopList__list\">\n      {topTracks && topTracks.map((item, index) => (\n      <article key={item.name} className=\"TopList__song--wrapper\">\n      <div className=\"TopList__playpause--wrapper\">\n          <div className={`playpause ${item.name}`}>\n            <input onClick={e => playSong(e)} type=\"checkbox\" defaultChecked={true} value=\"None\" id={`playpause ${item.name}`} name=\"check\" />\n            <label htmlFor={`playpause ${item.name}`} tabIndex=\"1\"></label>\n            <audio loop volume=\"0.1\" className={`audio_${item.name}`} key={`playback ${item.name}`} src={item.preview_url} />\n          </div>\n        </div>\n      <div className=\"TopList__content\">\n        <li key={item.name} className=\"TopList__song\">{`${index + 1} - ${item.artists[0].name} - ${item.name}`}</li>\n        </div>\n        <img className=\"TopList__image\" src={item.album.images[1].url}></img>\n      </article>\n      ))}\n    </ul>\n    </div>\n  );\n}\n\nexport default TopList;\n"]},"metadata":{},"sourceType":"module"}