{"version":3,"sources":["components/UserContext.js","components/App.js","components/Header.js","components/Layout.js","components/About.js","components/Current.js","components/TopList.js","components/Sorter.js","router/router.js","serviceWorker.js","index.js"],"names":["ContextUser","createContext","token","name","expiry","App","logOutUser","user","useContext","history","useHistory","access_token","className","onClick","push","href","Header","to","Layout","children","About","spotifyWebApi","Spotify","Current","setUser","useState","nowPlaying","setNowPlaying","error","setError","a","getMyCurrentPlaybackState","catch","err","response","playback","item","image","album","images","url","console","log","setAccessToken","alt","src","TopList","getRefreshToken","topTracks","setTopTracks","playing","setPlaying","message","setMessage","setMessageHelper","msg","setTimeout","renderDynamicButtons","period","id","e","getMyTopTracks","limit","time_range","then","res","Object","values","status","getTopList","buttons","document","getElementsByClassName","i","length","disabled","target","disableButton","replace","toUpperCase","button","disableCreateButton","tracks","map","track","uri","createPlaylist","public","collaborative","description","addTracksToPlaylist","addToPlayList","index","key","preview_url","audio","nextSibling","getElementById","click","volume","paused","play","pause","playSong","type","defaultChecked","value","htmlFor","tabIndex","loop","artists","Sorter","getAllSongsAndSort","getUserPlaylists","items","array","forEach","getPlaylistTracks","now","Date","AppRouter","loggedOutState","refresh_token","useMemo","useEffect","tokens","qs","parse","window","location","search","axios","get","headers","Authorization","data","display_name","getTime","localStorage","getItem","userToken","JSON","json","stringify","setItem","props","removeItem","Provider","path","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2OAEaA,EAAcC,wBAAc,CAACC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,KCoCxDC,EAlCH,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACLC,EAASC,qBAAWR,GAApBO,KACFE,EAAUC,cAuBhB,OACE,6BACE,oCAtBEH,GAAQA,EAAKI,aAEb,oCACA,wBAAIC,UAAU,gBAAd,YAAuCL,GAAQA,EAAKJ,KAApD,KACA,4BAAQS,UAAU,cAAcC,QAAS,WACvCP,IACAG,EAAQK,KAAK,OAFf,YAQA,6BAASF,UAAU,OACnB,wBAAIA,UAAU,eAAd,mDACA,uBAAGA,UAAU,cAAcG,KAAK,UAAS,4BAAQH,UAAU,gBAAlB,eCKlCI,EAzBA,kBACb,yBAAKJ,UAAU,UACb,wBAAIA,UAAU,eACZ,4BACE,kBAAC,IAAD,CAASA,UAAU,eAAeK,GAAG,KAArC,SAIF,4BACE,kBAAC,IAAD,CAASL,UAAU,eAAeK,GAAG,UAArC,UAQF,4BACE,kBAAC,IAAD,CAASL,UAAU,eAAeK,GAAG,YAArC,uBCPOC,EAXA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,oCACA,kBAAC,EAAD,MACA,yBAAKP,UAAU,UACf,yBAAKA,UAAU,qBACVO,MCCQC,EAPA,WACb,OACE,uBAAGR,UAAU,eAAb,kG,0CCCES,EAAgB,IAAIC,IAgCXC,EA9BE,WAAO,IAAD,EACGf,qBAAWR,GAA5BO,EADc,EACdA,KADc,KACRiB,QACuBC,mBAAS,KAFxB,mBAEdC,EAFc,KAEFC,EAFE,OAGKF,mBAAS,IAHd,mBAGdG,EAHc,KAGPC,EAHO,iDASrB,4BAAAC,EAAA,+EAEyBT,EAAcU,0BAA0BxB,EAAKI,cAAcqB,OAAM,SAAAC,GAAG,OAAIJ,EAASI,EAAIC,aAF9G,YAEQC,EAFR,wBAIIR,EAAc,CAACxB,KAAMgC,EAASC,KAAKjC,KAAMkC,MAAOF,EAASC,KAAKE,MAAMC,OAAO,GAAGC,MAJlF,+CAMW,8CANX,yDAQIC,QAAQC,IAAR,MARJ,2DATqB,sBAoBrB,OAfInC,EAAKI,cACPU,EAAcsB,eAAepC,EAAKI,cAelC,yBAAKC,UAAU,WACdgB,EACD,wBAAIhB,UAAU,iBAAd,sBAAkDc,EAAWvB,MAC7D,4BAAQU,QAxBW,4CAwBnB,kBACA,yBAAKD,UAAU,eAAegC,IAAI,YAAYC,IAAKnB,EAAWW,UC3B5DhB,EAAgB,IAAIC,IA6JXwB,EA3JC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAAsB,EACdvC,qBAAWR,GAA7BO,EADgC,EAChCA,KADgC,KAC1BiB,QACoBC,mBAAS,KAFH,mBAEjCuB,EAFiC,KAEtBC,EAFsB,OAGVxB,mBAAS,IAHC,mBAGjCyB,EAHiC,KAGxBC,EAHwB,OAIb1B,mBAAS,IAJI,mBAIhCG,EAJgC,KAIzBC,EAJyB,OAKTJ,mBAAS,IALA,mBAKhC2B,EALgC,KAKvBC,EALuB,KAmEjCC,EAAmB,SAACC,GACxBF,EAAW,CAACD,QAASG,IACrBC,YAAW,WACTH,EAAW,MACV,MAGAI,EAAuB,SAAAC,GAAM,OAClCnD,EAAKI,cACJ,4BACCgD,GAAID,EACJ9C,UAAU,2BACVC,QAAS,SAAA+C,IAxEQ,SAACF,GACpBrC,EAAcsB,eAAepC,EAAKI,cAClCU,EAAcwC,eAAe,CAACC,MAAO,GAAIC,WAAYL,IAAUM,MAAK,SAAAC,GACnExB,QAAQC,IAAIuB,GACZhB,EAAaiB,OAAOC,OAAOF,GAAK,OAC5BjC,OAAM,SAAAC,GACY,MAAfA,EAAImC,SACNrB,IACAO,EAAiB,yBAiEpBe,CAAWX,GA3BO,SAAAE,GAErB,IADA,IAAMU,EAAUC,SAASC,uBAAuB,4BACvCC,EAAI,EAAGA,EAAIH,EAAQI,OAAQD,IAAKH,EAAQG,GAAGE,UAAW,EAC/Df,EAAEgB,OAAOD,UAAW,EAyBjBE,CAAcjB,KAGbF,EAAOoB,QAAQpB,EAAO,GAAIA,EAAO,GAAGqB,eAAeD,QAAQ,IAAK,OAIrE,OACC,yBAAKlE,UAAU,WACd,wBAAIA,UAAU,kBAAd,oBAEEL,EAAKI,cACN,uBAAGC,UAAU,WAAb,4CAED,6BAASA,UAAU,oBACjB6C,EAAqB,aACrBA,EAAqB,eACrBA,EAAqB,eAEtBT,EAAU0B,OAAS,GACnB,4BAAQ9D,UAAU,wBAAwBC,QAAS,SAAC+C,IA1C1B,SAACA,GAC3B,IAAMoB,EAASpB,EAAEgB,OACjBI,EAAOL,UAAW,EAClBnB,YAAW,WACTwB,EAAOL,UAAW,IACjB,KAsCGM,CAAoBrB,GAnEP,WACrB,IAAMsB,EAASlC,EAAUmC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,OAC5ChE,EAAciE,eACb/E,EAAKoD,GACL,CACCxD,KAAM,kBACNoF,QAAQ,EACRC,eAAe,EACfC,YAAa,iCAEd,SAACxD,EAAKgC,GACL,GAAIhC,EAAK,OAAOJ,EAAS,CAACD,MAAOK,IACzBgC,EAAIN,IAAItC,EAAcqE,oBAAoBzB,EAAIN,GAAIuB,GACrDlD,OAAM,SAAAC,GAAG,OAAIQ,QAAQC,IAAIT,EAAIC,gBAuD5ByD,GACArC,EAAiB,uBAHvB,mBAMG1B,GAAS,uBAAGhB,UAAU,WAAWgB,EAAMA,OACvCwB,GAAW,uBAAGxC,UAAU,WAAWwC,EAAQA,SAC/C,wBAAIxC,UAAU,iBACZoC,GACAA,EAAUmC,KAAI,SAAC/C,EAAMwD,GAAP,OACb,6BAASC,IAAG,UAAKzD,EAAKjC,KAAV,YAAkBiC,EAAKuB,IAAM/C,UAAU,0BACvB,OAArBwB,EAAK0D,aACX,yBAAKlF,UAAU,+BACd,yBAAKA,UAAS,oBAAewB,EAAKjC,KAAK2E,QAAQ,KAAK,MACnD,2BACCjE,QAAS,SAAA+C,GAAC,OAlGD,SAAAA,GACf,IAAMmC,EAAQnC,EAAEgB,OAAOoB,YAAYA,YACZ,IAAnB9C,EAAQwB,QACYH,SAAS0B,eAAT,gBAAiC/C,EAAQS,KACjDuC,QAElBH,EAAMI,OAAS,GACXJ,EAAMK,QACTL,EAAMM,OACNlD,EAAW4C,KAEXA,EAAMO,QACNnD,EAAW,KAsFUoD,CAAS3C,IACvB4C,KAAK,WACLC,gBAAgB,EAChBC,MAAM,OACN/C,GAAE,oBAAevB,EAAKjC,MACtBA,KAAK,UAEN,2BACCwG,QAAO,oBAAevE,EAAKjC,MAC3ByG,SAAS,IACCjD,GAAE,gBAAWvB,EAAKjC,KAAK2E,QAAQ,KAAK,OAE/C,2BACC+B,MAAI,EACJV,OAAO,MACPxC,GAAE,UAAKvB,EAAKjC,KAAK2E,QAAQ,KAAK,KAC9Be,IAAG,mBAAczD,EAAKjC,MACtB0C,IAAKT,EAAK0D,gBAIb,yBAAKlF,UAAU,oBACd,wBAAIiF,IAAKzD,EAAKjC,KAAMS,UAAU,iBAA9B,UACCgF,EAAQ,EADT,cAEMxD,EAAK0E,QAAQ,GAAG3G,KAFtB,cAEgCiC,EAAKjC,QAEtC,yBACCS,UAAU,iBACFgC,IAAKR,EAAKjC,KAClB0C,IAAKT,EAAKE,MAAMC,OAAO,GAAGC,aCpJ5BnB,EAAgB,IAAIC,IAgCXyF,EA9BC,WAAO,IAAD,EACIvG,qBAAWR,GAA5BO,EADa,EACbA,KADa,KACPiB,QACaC,mBAAS,KAFf,mBAEbG,EAFa,aAGcH,mBAAS,KAHvB,gCAIQA,mBAAS,KAJjB,6BAMhBlB,EAAKI,cACPU,EAAcsB,eAAepC,EAAKI,cAGpC,IAAMqG,EAAkB,uCAAG,gCAAAlF,EAAA,6DACnBoD,EAAS,GADU,SAEP7D,EAAc4F,iBAAiB1G,EAAKoD,GAAI,CAACG,MAAO,KAFzC,cAEnBG,EAFmB,gBAGLA,EAAIiD,MAAM/B,KAAI,SAAA/C,GAAI,OAAIA,EAAKuB,MAHtB,cAGnBwD,EAHmB,gBAInBA,EAAMC,SAAQ,SAAAhF,GAAI,OAAIf,EAAcgG,kBAAkBjF,GAAM4B,MAAK,SAAAC,GAAG,OAAIiB,EAAOpE,KAAKmD,SAJjE,wBAKnBxB,QAAQC,IAAIwC,GALO,4CAAH,qDAYxB,OACE,yBAAKtE,UAAU,UACdgB,EACD,4BAAQf,QAASmG,GAAjB,mB,kCCrBEM,EAAM,IAAIC,KAgFDC,EA9EG,WAChB,IAAMC,EAAiB,CACnB9G,aAAc,GACd+G,cAAe,GACfvH,KAAM,GACNwD,GAAI,GACJvD,OAAQ,IANU,EAQCqB,mBAASgG,GARV,mBAQhBlH,EARgB,KAQViB,EARU,KAShBkF,EAAQiB,mBAAQ,iBAAO,CAAEpH,OAAMiB,aAAY,CAACjB,EAAMiB,IAEzDoG,qBAAU,WACT,IAAMC,EAASC,IAAGC,MAAMC,OAAOC,SAASC,QACpCL,EAAOlH,eAAiBJ,EAAKJ,KAAKuE,QACrCyD,IACEC,IAAI,gCAAiC,CACrCC,QAAS,CAAEC,cAAe,UAAYT,EAAOlH,gBAE7CqD,MAAK,SAAAC,GACAxB,QAAQC,IAAIuB,GACjBzC,EAAQ,CACPb,aAAckH,EAAOlH,aACrB+G,cAAeG,EAAOH,cACtBvH,KAAM8D,EAAIsE,KAAKC,aACf7E,GAAIM,EAAIsE,KAAK5E,GACbvD,OAAQkH,EAAImB,iBAId,IAEHb,qBAAU,WACP,IAAM1H,EAAQwI,aAAaC,QAAQ,aAC7BC,EAAYC,KAAKd,MAAM7H,GAC7BsB,EAAQoH,KACR,CAACrI,EAAKJ,KAAKuE,SAEdkD,qBAAU,WACT,IAAMkB,EAAOD,KAAKE,UAAUxI,GAC1BmI,aAAaM,QAAQ,YAAaF,KACjC,CAACvI,IAEL,IAAMD,EAAa,SAAC2I,GACnBP,aAAaQ,WAAW,aACtB1H,EAAQiG,IAGJ1E,EAAkB,WACtBoF,IAAMC,IAAN,uCAA0C7H,EAAKmH,gBAC5C1D,MAAK,SAAAC,GAAG,OAAIzC,EAAQ,2BAAIjB,GAAL,IAAWI,aAAcsD,EAAIsE,KAAK5H,oBAG3D,OACC,kBAACX,EAAYmJ,SAAb,CAAsBzC,MAAOA,GAC5B,kBAAC,IAAD,KACC,kBAAC,EAAD,KACC,oCACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAO0C,KAAK,IAAIC,OAAK,GACpB,kBAAC,EAAD,CAAK/I,WAAYA,KAElB,kBAAC,IAAD,CAAO8I,KAAK,YAAYC,OAAK,EAACC,UAAWjJ,IACzC,kBAAC,IAAD,CAAO+I,KAAK,SAASE,UAAWlI,IAChC,kBAAC,IAAD,CAAOgI,KAAK,WAAWE,UAAW/H,IAClC,kBAAC,IAAD,CAAO6H,KAAK,YACH,kBAAC,EAAD,CAASrG,gBAAiBA,EAAiBzC,WAAYA,KAEzD,kBAAC,IAAD,CAAO8I,KAAK,WACV,kBAAC,EAAD,CAAQrG,gBAAiBA,EAAiBzC,WAAYA,WCrElDiJ,QACW,cAA7BvB,OAAOC,SAASuB,UAEe,UAA7BxB,OAAOC,SAASuB,UAEhBxB,OAAOC,SAASuB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFrF,SAAS0B,eAAe,SDyHpB,kBAAmB4D,WACrBA,UAAUC,cAAcC,MACrB/F,MAAK,SAAAgG,GACJA,EAAaC,gBAEdjI,OAAM,SAAAJ,GACLa,QAAQb,MAAMA,EAAMwB,c","file":"static/js/main.4dfe4b0d.chunk.js","sourcesContent":["import {createContext} from 'react';\n\nexport const ContextUser = createContext({token: '', name: '', expiry: ''});\n","import React, { useContext} from 'react'\nimport { ContextUser } from '../components/UserContext';\nimport { useHistory } from 'react-router-dom';\n\nconst App = ({ logOutUser }) => {\n  const { user } = useContext(ContextUser)\n  const history = useHistory()\n\n  const renderPage = () => {\n    if (user && user.access_token) {\n      return (\n        <>\n        <h1 className=\"App__welcome\">Welcome, {user && user.name}.</h1>\n        <button className=\"App__logout\" onClick={() => {\n          logOutUser()\n          history.push('/')\n          }}>Log Out</button>\n        </>\n      )\n    } else {\n      return (\n        <section className=\"App\">\n        <h2 className=\"App__prompt\">Welcome! Please log in to your Spotify Account.</h2>\n        <a className=\"App__anchor\" href=\"/login\"><button className=\"Auth__button\">Log In</button></a>\n        </section>\n      )\n    }\n  }\n\n  return (\n    <div>\n      <>\n      {renderPage()}\n      </>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react'\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => (\n  <nav className=\"Header\">\n    <ul className=\"Header__nav\">\n      <li>\n        <NavLink className=\"Header__item\" to=\"/\">\n        Home\n        </NavLink>\n      </li>\n      <li>\n        <NavLink className=\"Header__item\" to=\"/about\">\n          About\n        </NavLink>\n      </li>\n      {/* <li>\n        <NavLink className=\"Header__item\" to=\"/current\">Currently Playing\n        </NavLink>\n      </li> */}\n      <li>\n        <NavLink className=\"Header__item\" to=\"/toplist\">Your Top Tracks\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n)\n\nexport default Header;\n","import React from 'react';\nimport Header from './Header';\n\nconst Layout = ({ children }) => (\n  <>\n  <Header />\n  <div className=\"Layout\">\n  <div className=\"Layout__container\">\n      {children}\n      </div>\n  </div>\n  </>\n);\n\nexport default Layout;\n","import React from 'react'\n\n const About = () => {\n  return (\n    <p className=\"About__text\">\n      Made by Filip Cordas (https://github.com/atfilipcc) with React, Express, and the Spotify API.\n    </p>\n  )\n}\nexport default About;\n","/* eslint-disable no-unused-vars */\nimport React, {useState, useContext} from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { ContextUser } from '../components/UserContext';\n\nconst spotifyWebApi = new Spotify();\n\nconst  Current = () => {\n  const {user, setUser} = useContext(ContextUser)\n  const [nowPlaying, setNowPlaying] = useState({})\n  const [error, setError] = useState('')\n\n  if (user.access_token) {\n    spotifyWebApi.setAccessToken(user.access_token)\n  }\n\n  async function getNowPlaying () {\n    try {\n    const playback = await spotifyWebApi.getMyCurrentPlaybackState(user.access_token).catch(err => setError(err.response))\n    if (playback) {\n      setNowPlaying({name: playback.item.name, image: playback.item.album.images[0].url})\n    } else {\n      return <p>Nothing found!</p>\n    }} catch(error) {\n      console.log(error);\n    }\n  }\n  return (\n    <div className=\"Current\">\n    {error}\n    <h2 className=\"Current__name\">Currently Playing: {nowPlaying.name}</h2>\n    <button onClick={getNowPlaying}>Check Playback</button>\n    <img className=\"Current__img\" alt=\"album-art\" src={nowPlaying.image}></img>\n    </div>\n  );\n}\n\nexport default Current;\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useContext } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { ContextUser } from '../components/UserContext';\n\nconst spotifyWebApi = new Spotify();\n\nconst TopList = ({ getRefreshToken }) => {\n\tconst { user, setUser } = useContext(ContextUser);\n\tconst [topTracks, setTopTracks] = useState([]);\n\tconst [playing, setPlaying] = useState([]);\n  const [error, setError] = useState({});\n  const [message, setMessage] = useState('');\n\n  const getTopList = (period) => {\n\t\tspotifyWebApi.setAccessToken(user.access_token);\n\t\tspotifyWebApi.getMyTopTracks({limit: 30, time_range: period }).then(res => {\n\t\t\tconsole.log(res);\n\t\t\tsetTopTracks(Object.values(res)[0]);\n    }).catch(err => {\n      if (err.status === 401) {\n        getRefreshToken();\n        setMessageHelper('Please try again.')\n    }\n  })}\n\n  const playSong = e => {\n    const audio = e.target.nextSibling.nextSibling;\n    if (playing.length !== 0) {\n      const playingButton = document.getElementById(`label ${playing.id}`);\n      playingButton.click();\n    }\n\t\taudio.volume = 0.1;\n\t\tif (audio.paused) {\n\t\t\taudio.play();\n\t\t\tsetPlaying(audio);\n\t\t} else {\n\t\t\taudio.pause();\n\t\t\tsetPlaying([]);\n\t\t}\n\t}\n\n\tconst addToPlayList = () => {\n\t\tconst tracks = topTracks.map(track => track.uri);\n\t\tspotifyWebApi.createPlaylist(\n\t\t\tuser.id,\n\t\t\t{\n\t\t\t\tname: 'Your Top Tracks',\n\t\t\t\tpublic: true,\n\t\t\t\tcollaborative: false,\n\t\t\t\tdescription: 'Your most listened to songs.',\n\t\t\t},\n\t\t\t(err, res) => {\n\t\t\t\tif (err) return setError({error: err});\n        if (res.id) spotifyWebApi.addTracksToPlaylist(res.id, tracks)\n        .catch(err => console.log(err.response))\n      }\n\t\t);\n\t}\n\n\tconst disableButton = e => {\n\t\tconst buttons = document.getElementsByClassName('TopList__buttons--button');\n\t\tfor (let i = 0; i < buttons.length; i++) buttons[i].disabled = false;\n\t\te.target.disabled = true;\n  };\n\n  const disableCreateButton = (e) => {\n    const button = e.target;\n    button.disabled = true;\n    setTimeout(() => {\n      button.disabled = false;\n    }, 3000);\n  }\n\n  const setMessageHelper = (msg) => {\n    setMessage({message: msg})\n    setTimeout(() => {\n      setMessage('')\n    }, 3000);\n  }\n\n\tconst renderDynamicButtons = period =>\n\t\tuser.access_token && (\n\t\t\t<button\n\t\t\t\tid={period}\n\t\t\t\tclassName='TopList__buttons--button'\n\t\t\t\tonClick={e => {\n\t\t\t\t\tgetTopList(period);\n\t\t\t\t\tdisableButton(e);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{(period.replace(period[0], period[0].toUpperCase()).replace('_', ' '))}\n\t\t\t</button>\n\t\t);\n\n\treturn (\n\t\t<div className='TopList'>\n\t\t\t<h1 className='TopList__title'>Your Top Tracks</h1>\n\n\t\t\t{!user.access_token && (\n\t\t\t\t<p className='message'>Please log in to use this functionality.</p>\n\t\t\t)}\n\t\t\t<section className='TopList__buttons'>\n\t\t\t\t{renderDynamicButtons('long_term')}\n\t\t\t\t{renderDynamicButtons('medium_term')}\n\t\t\t\t{renderDynamicButtons('short_term')}\n\t\t\t</section>\n\t\t\t{topTracks.length > 0 && (\n\t\t\t\t<button className=\"TopList__createButton\" onClick={(e) => {\n          disableCreateButton(e);\n          addToPlayList();\n          setMessageHelper('Playlist created!');\n          }}>Create playlist</button>\n\t\t\t)}\n      {error && <p className=\"message\">{error.error}</p>}\n      {message && <p className=\"message\">{message.message}</p>}\n\t\t\t<ul className='TopList__list'>\n\t\t\t\t{topTracks &&\n\t\t\t\t\ttopTracks.map((item, index) => (\n\t\t\t\t\t\t<article key={`${item.name} ${item.id}`} className='TopList__song--wrapper'>\n            {item.preview_url !== null &&\n\t\t\t\t\t\t\t<div className='TopList__playpause--wrapper'>\n\t\t\t\t\t\t\t\t<div className={`playpause ${item.name.replace(/ /g,'')}`}>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tonClick={e => playSong(e)}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t\tdefaultChecked={true}\n\t\t\t\t\t\t\t\t\t\tvalue='None'\n\t\t\t\t\t\t\t\t\t\tid={`playpause ${item.name}`}\n\t\t\t\t\t\t\t\t\t\tname='check'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\thtmlFor={`playpause ${item.name}`}\n\t\t\t\t\t\t\t\t\t\ttabIndex='1'\n                    id={`label ${item.name.replace(/ /g,'')}`}\n\t\t\t\t\t\t\t\t\t></label>\n\t\t\t\t\t\t\t\t\t<audio\n\t\t\t\t\t\t\t\t\t\tloop\n\t\t\t\t\t\t\t\t\t\tvolume='0.1'\n\t\t\t\t\t\t\t\t\t\tid={`${item.name.replace(/ /g,'')}`}\n\t\t\t\t\t\t\t\t\t\tkey={`playback ${item.name}`}\n\t\t\t\t\t\t\t\t\t\tsrc={item.preview_url}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t\t<div className='TopList__content'>\n\t\t\t\t\t\t\t\t<li key={item.name} className='TopList__song'>{`${\n\t\t\t\t\t\t\t\t\tindex + 1\n\t\t\t\t\t\t\t\t} - ${item.artists[0].name} - ${item.name}`}</li>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName='TopList__image'\n                alt={item.name}\n\t\t\t\t\t\t\t\tsrc={item.album.images[1].url}\n\t\t\t\t\t\t\t></img>\n\t\t\t\t\t\t</article>\n\t\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default TopList;\n","/* eslint-disable no-unused-vars */\nimport React, {useState, useContext} from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { ContextUser } from './UserContext';\n\nconst spotifyWebApi = new Spotify();\n\nconst  Sorter = () => {\n  const {user, setUser} = useContext(ContextUser);\n  const [error, setError] = useState('');\n  const [playlists, setPlaylists] = useState('');\n  const [tracks, setTracks] = useState('');\n\n  if (user.access_token) {\n    spotifyWebApi.setAccessToken(user.access_token)\n  }\n\n  const getAllSongsAndSort = async () => {\n    const tracks = [];\n    const res = await spotifyWebApi.getUserPlaylists(user.id, {limit: 30})\n    const array = await res.items.map(item => item.id)\n    await array.forEach(item => spotifyWebApi.getPlaylistTracks(item).then(res => tracks.push(res)))\n    await console.log(tracks)\n    }\n\n\n      // .then(array => array.forEach(item => spotifyWebApi.getPlaylistTracks(item)\n      // .then(array => setPlaylists(array)\n      // .catch(err => console.log(err))\n  return (\n    <div className=\"Sorter\">\n    {error}\n    <button onClick={getAllSongsAndSort}>Get Playlists</button>\n    </div>\n  );\n}\n\nexport default Sorter;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from '../components/App';\nimport Layout from '../components/Layout';\nimport About from '../components/About';\nimport Current from '../components/Current';\nimport TopList from '../components/TopList';\nimport Sorter from '../components/Sorter';\nimport { ContextUser } from '../components/UserContext';\nimport qs from 'query-string';\nimport axios from 'axios';\nconst now = new Date();\n\nconst AppRouter = () => {\n  const loggedOutState = {\n      access_token: '',\n      refresh_token: '',\n      name: '',\n      id: '',\n      expiry: ''\n    }\n\tconst [user, setUser] = useState(loggedOutState);\n  const value = useMemo(() => ({ user, setUser }), [user, setUser]);\n\n\tuseEffect(() => {\n\t\tconst tokens = qs.parse(window.location.search);\n\t\tif (tokens.access_token && !user.name.length) {\n\t\t\taxios\n\t\t\t\t.get('https://api.spotify.com/v1/me', {\n\t\t\t\t\theaders: { Authorization: 'Bearer ' + tokens.access_token },\n\t\t\t\t})\n\t\t\t\t.then(res => {\n          console.log(res)\n\t\t\t\t\tsetUser({\n\t\t\t\t\t\taccess_token: tokens.access_token,\n\t\t\t\t\t\trefresh_token: tokens.refresh_token,\n\t\t\t\t\t\tname: res.data.display_name,\n\t\t\t\t\t\tid: res.data.id,\n\t\t\t\t\t\texpiry: now.getTime(),\n\t\t\t\t\t})\n\t\t\t\t})\n    }\n\t}, []);\n\n\tuseEffect(() => {\n    const token = localStorage.getItem('userToken');\n    const userToken = JSON.parse(token);\n    setUser(userToken);\n\t}, [user.name.length]);\n\n\tuseEffect(() => {\n\t\tconst json = JSON.stringify(user);\n    localStorage.setItem('userToken', json);\n  }, [user]);\n\n\tconst logOutUser = (props) => {\n\t\tlocalStorage.removeItem('userToken');\n    setUser(loggedOutState);\n  };\n\n  const getRefreshToken = () => {\n    axios.get(`/refresh_token?refresh_token=${user.refresh_token}`)\n      .then(res => setUser({...user, access_token: res.data.access_token}))\n  }\n\n\treturn (\n\t\t<ContextUser.Provider value={value}>\n\t\t\t<Router>\n\t\t\t\t<Layout>\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path='/' exact>\n\t\t\t\t\t\t\t\t<App logOutUser={logOutUser} />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route path='/callback' exact component={App} />\n\t\t\t\t\t\t\t<Route path='/about' component={About} />\n\t\t\t\t\t\t\t<Route path='/current' component={Current} />\n\t\t\t\t\t\t\t<Route path='/toplist' >\n                <TopList getRefreshToken={getRefreshToken} logOutUser={logOutUser} />\n              </Route>\n              <Route path='/sorter' >\n                <Sorter getRefreshToken={getRefreshToken} logOutUser={logOutUser} />\n              </Route>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</>\n\t\t\t\t</Layout>\n\t\t\t</Router>\n\t\t</ContextUser.Provider>\n\t);\n};\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport AppRouter from './router/router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}